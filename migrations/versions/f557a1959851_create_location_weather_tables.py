"""feature/add-weather-location-schema_20250813_171620

Revision ID: f557a1959851
Revises: b05ddf47e04e
Create Date: 2025-08-13 09:16:20.905902

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f557a1959851'
down_revision: Union[str, None] = 'b05ddf47e04e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('geocode', sa.String(length=10), nullable=False),
    sa.Column('county', sa.String(length=10), nullable=False),
    sa.Column('district', sa.String(length=10), nullable=False),
    sa.Column('full_name', sa.String(length=20), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('geocode')
    )
    op.create_index(op.f('ix_location_full_name'), 'location', ['full_name'], unique=False)
    op.create_table('weather',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('fetched_at', sa.DateTime(), nullable=False),
    sa.Column('weather_condition', sa.String(length=30), nullable=False),
    sa.Column('weather_emoji', sa.String(length=10), nullable=True),
    sa.Column('precipitation_probability', sa.Integer(), nullable=True),
    sa.Column('min_temperature', sa.Integer(), nullable=True),
    sa.Column('max_temperature', sa.Integer(), nullable=True),
    sa.Column('raw_description', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('precipitation_probability >= 0 AND precipitation_probability <= 100', name='check_precipitation_probability'),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('location_id', 'start_time', 'end_time', 'fetched_at', name='unique_location_time_fetched')
    )
    op.create_index(op.f('ix_weather_start_time'), 'weather', ['start_time'], unique=False)
    op.drop_constraint(op.f('user_line_user_id_key'), 'user', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('user_line_user_id_key'), 'user', ['line_user_id'])
    op.drop_index(op.f('ix_weather_start_time'), table_name='weather')
    op.drop_table('weather')
    op.drop_index(op.f('ix_location_full_name'), table_name='location')
    op.drop_table('location')
    # ### end Alembic commands ###
