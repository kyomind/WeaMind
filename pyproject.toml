[project]
dependencies = [
  "fastapi>=0.115.12",
  "httpx>=0.28.1",
  "psycopg[binary]>=3.2.9",
  "pydantic-settings>=2.9.1",
  "sqlalchemy>=2.0.40",
  "uvicorn[standard]>=0.34.2",
]
description = "Add your description here"
name = "WeaMind"
readme = "README.md"
requires-python = ">=3.12" # Affects pyupgrade auto fixes and replaces target-version
version = "0.1.0"

[dependency-groups]
dev = [
  "alembic>=1.16.1",
  "coverage>=7.9.1",
  "deptry>=0.23.0",
  "pre-commit>=4.2.0",
  "pyright>=1.1.401",
  "pytest>=8.4.0",
  "pytest-asyncio>=0.24.0",
  "pytest-cov>=6.2.1",
  "pytest-sugar>=1.0.0",
  "ruff>=0.11.9",
]

[tool.ruff] # https://docs.astral.sh/ruff/settings/#top-level
exclude = ["migrations", ".venv"]
line-length = 100

[tool.ruff.lint] # https://docs.astral.sh/ruff/settings/#lint

select = ["E", "W", "F", "I", "UP"]

extend-select = [
  "ANN",     # flake8-annotations – type-hint coverage
  "B",       # flake8-bugbear – likely bugs & bad practices
  "ASYNC",   # flake8-async – async / await correctness
  "TRY",     # tryceratops – try / except anti-patterns
  "PERF",    # perflint – micro-performance optimizations
  "FAST001", # fast-api-redundant-response-model
  "FAST002", # fast-api-non-annotated-dependency
  "D103",    # undocumented-public-function
  "D213",    # multi-line-summary-second-line
  "D400",    # missing-trailing-period
  "DOC201",  # docstring-missing-returns section
  "S101",    # assert detected (security risk)
  "S110",    # try-except-pass (swallowing exceptions)
  "ERA001",  # commented-out-code
]

# Globally ignore noisy rules (example)
ignore = [
  "E402", # module level import not at top of file
  "ANN101", # self / cls do not need annotation
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"] # Allow assert statements in tests

[tool.ruff.format] # https://docs.astral.sh/ruff/settings/#format
quote-style = "double" # Quote style, double quotes are default

[tool.coverage.run]
branch = true
omit = [
  "tests/*",
  ".venv/*",
]
source = ["app"]

[tool.coverage.report]
exclude_also = [
  "def __repr__",
  "if self\\.debug",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
# skip_covered = true

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.html]
directory = "coverage_html_report"
show_contexts = true
title = "Coverage Report for WeaMind"

[tool.pytest.ini_options]
addopts = "-ra --strict-config --strict-markers --cov=app --cov-report=xml --cov-report=term-missing"
filterwarnings = ["error"]
markers = [
  "asyncio: marks tests as asyncio tests",
]
python_files = ["test_*.py"]
testpaths = ["tests"]
