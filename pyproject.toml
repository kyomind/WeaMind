[project]
dependencies = [
  "alembic>=1.16.1",
  "fastapi>=0.115.12",
  "httpx>=0.28.1",
  "line-bot-sdk>=3.17.1",
  "psycopg[binary]>=3.2.9",
  "pydantic-settings>=2.9.1",
  "pyjwt>=2.10.1",
  "cryptography>=45.0.7",
  "sqlalchemy>=2.0.40",
  "uvicorn[standard]>=0.34.2",
  "redis[hiredis]>=6.4.0",
]
description = "Your smart LINE assistant for instant weather updates."
name = "WeaMind"
readme = "README.md"
requires-python = ">=3.12" # Affects pyupgrade auto fixes and replaces target-version
version = "1.0.1"

[dependency-groups]
dev = [
  "coverage>=7.9.1",
  "deptry>=0.23.0",
  "pre-commit>=4.2.0",
  "pyright>=1.1.401",
  "pytest>=8.4.0",
  "pytest-asyncio>=0.24.0",
  "pytest-cov>=6.2.1",
  "pytest-sugar>=1.0.0",
  "ruff>=0.11.9",
]

[tool.ruff] # https://docs.astral.sh/ruff/settings/#top-level
exclude = ["migrations", ".venv"]
line-length = 100

[tool.ruff.lint] # https://docs.astral.sh/ruff/settings/#lint
extend-select = [
  "FAST001", # fast-api-redundant-response-model
  "FAST002", # fast-api-non-annotated-dependency
  "D100", # missing-module-docstring
  "D101", # undocumented-public-class
  "D102", # missing-class-docstring
  "D103", # undocumented-public-function
  "D213", # multi-line-summary-second-line
  "D400", # missing-trailing-period
  "ERA001", # commented-out-code
]
select = [
  "B", # flake8-bugbear
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "S", # bandit
  "W", # pycodestyle
  "UP", # pyupgrade
  "C4", # flake8-comprehensions
  "ANN", # flake8-annotations
  "TRY", # tryceratops
  "PERF", # perflint
  "ASYNC", # flake8-async
]

# Globally ignore noisy rules (example)
ignore = [
  "E402", # module level import not at top of file
  "TRY003", # Avoid specifying long messages outside the exception class
  "TRY301", # Abstract `raise` to an inner function
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "S101", # Allow use of assert statements in tests
  "S105", # hardcoded-password-string
  "S106", # hardcoded-password-func-arg
  "S107", # hardcoded-password-default
]

[tool.ruff.format] # https://docs.astral.sh/ruff/settings/#format
quote-style = "double" # Quote style, double quotes are default

[tool.coverage.run]
branch = true
omit = [
  "tests/*",
  ".venv/*",
]
source = ["app"]

[tool.coverage.report]
exclude_also = [
  "def __repr__",
  "if self\\.debug",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
# skip_covered = true

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.html]
directory = "coverage_html_report"
show_contexts = true
title = "Coverage Report for WeaMind"

[tool.pytest.ini_options]
addopts = "-ra --strict-config --strict-markers --cov=app --cov-report=xml --cov-report=term-missing"
filterwarnings = ["error"]
markers = [
  "asyncio: marks tests as asyncio tests",
]
python_files = ["test_*.py"]
testpaths = ["tests"]

[tool.pyright]
exclude = [
  "migrations",
  ".venv",
]
typeCheckingMode = "basic"
venv = ".venv"
venvPath = "."
